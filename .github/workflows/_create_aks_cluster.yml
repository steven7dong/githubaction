name: Create AKS Cluster 

on:
  workflow_call:
    inputs:
      kubernetes-version: 
        required: true
        type: string
        description: "Kubernetes version to use for AKS cluster creation"
  workflow_dispatch:
    inputs:
      kubernetes-version:
        required: true
        type: string
        description: "Kubernetes version to use for AKS cluster creation"
jobs:
  create-aks-cluster:
    name: Create AKS Cluster
    runs-on: ubuntu-latest
    outputs:
      cluster-name: ${{ steps.create-aks-cluster.outputs.cluster-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log into Azure
        run: |
          az login --service-principal \
            --username cd2638ff-0fb5-4004-8bd3-e8a446785327 \
            --password ***dsudsa*** \
            --tenant 72f988bf-86f1-41af-91ab-2d7cd011db47

      - name: Install Dependencies 
        id: install-dependencies 
        run: |
          result=$(az extension list -o table  2>&1 || true)
          if [[ $result == *"aks-preview"* ]]; then
            echo "aks-preview already installed, upgrading aks-preview version."
            az extension update --name aks-preview
          else
            echo "aks-preview extension not found. Installing aks-preview..."
            az extension add --name aks-preview
          fi

      - name: Create AKS Cluster
        id: create-aks-cluster
        run: |
          random_number=$((RANDOM % 10000 + 1))

          az aks create --resource-group ${{ vars.RESOURCE_GROUP }} \
          --name skr-kafka-demo-${random_number} \
          --kubernetes-version ${{ inputs.kubernetes-version }} \
          --os-sku AzureLinux \
          --node-vm-size Standard_DC4as_cc_v5 \
          --enable-oidc-issuer \
          --enable-workload-identity \
          --workload-runtime KataCcIsolation \
          --node-count 1 \
          --generate-ssh-keys
          echo "cluster-name=skr-kafka-demo-${random_number}" >> $GITHUB_OUTPUT

