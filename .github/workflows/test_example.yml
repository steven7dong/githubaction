name: Test Example

on:
  workflow_call:
    inputs:
      example-name:
        description: Name of example to test
        type: string
      locations:
        description: Locations to deploy containers to
        default: '["northeurope", "westeurope"]'
        type: string
      manifest-modifiers:
        description: Modifications to environment for the manifest
        type: string
  workflow_dispatch:
    inputs:
      example-name:
        description: Name of example to test
        type: string
      locations:
        description: Locations to deploy containers to
        default: '["northeurope", "westeurope"]'
        type: string
      manifest-modifiers:
        description: Modifications to environment for the manifest
        type: string

jobs:

  resolve-manifest:
    name: Resolve Manifest Variables
    uses: ./.github/workflows/_resolve_manifest.yml
    secrets: inherit
    with:
      manifest: examples/${{ inputs.example-name }}/manifest.json
      modifiers: ${{ inputs.manifest-modifiers }}

  prepare:
    name: Prepare Test
    runs-on: ubuntu-latest
    needs: resolve-manifest
    outputs:
      id: ${{ steps.generate-id.outputs.id }}
      images: ${{ steps.get-images.outputs.images }}
      security-policies: ${{ steps.get-security-policies.outputs.security-policies }}
    steps:
      - name: Get Workflow ID
        id: generate-id
        run: echo "id=$(openssl rand -hex 8 | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Decrypt Manifest
        run: |
          echo -e "${{ secrets.DECRYPTION_KEY }}" | gpg --import
          echo -e "${{ needs.resolve-manifest.outputs.manifest }}" | gpg --decrypt > manifest.json
        
      - name: Get Images
        id: get-images
        run: |
          images="[$(cat manifest.json | jq -r '.images | to_entries[] | "\"\(.key):\(.value)\","' | tr -d '\n')]"
          echo $images
          echo "images=$images" >> $GITHUB_OUTPUT

      - name: Get Security Policies
        id: get-security-policies
        run: |
          securityPolicies="[$(cat manifest.json | jq -r '.securityPolicies' | tr -d '[]\n ')]"
          if [[ $securityPolicies == "[]" ]]; then
            securityPolicies="[\"_generated.rego\"]"
          else
            securityPolicies="[\"_generated.rego\", ${securityPolicies:1}"
          fi
          echo $securityPolicies
          echo "security-policies=$securityPolicies" >> $GITHUB_OUTPUT